- name: Install Container Runtime on All Nodes
  hosts: all_server
  become: true
  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - gnupg-agent
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: Set modprobe
      command: 
        argv: 
          - modprobe 
          - br_netfilter 
          - overlay

    - name: add sysctl config
      shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s-cri.conf
        net.bridge.bridge-nf-call-iptables=1
        net.ipv4.ip_forward=1
        net.bridge.bridge-nf-call-ip6tables=1
        EOF

    - name: save sysctl config
      command: sysctl --system

    - name: Disable swap
      command: swapoff -a

    - name: Install containerd 
      apt:
        pkg:
          - containerd
        state: latest
        update_cache: yes

    - name: Configure Containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml
        sed -i s/'SystemdCgroup = false'/'SystemdCgroup = true'/g /etc/containerd/config.toml

    - name: Restart containerd & daemon-reload
      systemd:
        daemon_reload: yes
        name: containerd
        state: restarted
        enabled: yes

- name: Add repo & install kubernetes all Nodes
  hosts: all_server
  become: true
  vars:
    kube_version: 1.27.1-00
  tasks:
    - name: Add Kubernetes repo gpg key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add kubernetes repo
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install kubectl on master node
      when: inventory_hostname in groups['master']
      apt:
        pkg:
          - kubectl={{ kube_version }}

    - name: Install kubernetes component all nodes
      apt:
        pkg:
          - kubeadm={{ kube_version }}
          - kubelet={{ kube_version }}

- name: Setup cluster on master node
  hosts: master
  gather_facts: false
  become: true
  vars:
    pod_cidr: 10.244.0.0/16
    cri_sock: /run/containerd/containerd.sock
  tasks:
    - name: Initialize cluster
      command: kubeadm init --pod-network-cidr={{pod_cidr}} --cri-socket {{cri_sock}}
      register: init_output

    - debug:
        var: init_output.stdout_lines

    - name: create join command on master node
      command: kubeadm token create --print-join-command
      register: command
      
    - name: Store join command to variable
      add_host:
        name: "join_command"
        hostname: 10.10.51.240
        commandnya: "{{command.stdout}}"

    - debug:
        msg: "Join command: {{command.stdout}}"

- name: Worker join master
  hosts: worker
  gather_facts: false
  become: true
  vars:
    joinnya: "{{ hostvars['join_command']['commandnya'] }}"
  tasks:
    - name: Kubeam join master
      command: "{{joinnya}}"
      register: result_join

    - debug:
        msg: "{{result_join}}"